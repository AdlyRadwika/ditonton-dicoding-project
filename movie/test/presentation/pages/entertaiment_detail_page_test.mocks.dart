// Mocks generated by Mockito 5.3.2 from annotations
// in movie/test/presentation/pages/entertaiment_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/movie.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetMovieDetail_0 extends _i1.SmartFake
    implements _i2.GetMovieDetail {
  _FakeGetMovieDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMovieRecommendations_1 extends _i1.SmartFake
    implements _i2.GetMovieRecommendations {
  _FakeGetMovieRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMovieWatchlistStatus_2 extends _i1.SmartFake
    implements _i2.GetMovieWatchlistStatus {
  _FakeGetMovieWatchlistStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveMovieWatchlist_3 extends _i1.SmartFake
    implements _i2.SaveMovieWatchlist {
  _FakeSaveMovieWatchlist_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveMovieWatchlist_4 extends _i1.SmartFake
    implements _i2.RemoveMovieWatchlist {
  _FakeRemoveMovieWatchlist_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetail_5 extends _i1.SmartFake implements _i2.MovieDetail {
  _FakeMovieDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i2.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetMovieDetail get getMovieDetail => (super.noSuchMethod(
        Invocation.getter(#getMovieDetail),
        returnValue: _FakeGetMovieDetail_0(
          this,
          Invocation.getter(#getMovieDetail),
        ),
      ) as _i2.GetMovieDetail);
  @override
  _i2.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getMovieRecommendations),
        returnValue: _FakeGetMovieRecommendations_1(
          this,
          Invocation.getter(#getMovieRecommendations),
        ),
      ) as _i2.GetMovieRecommendations);
  @override
  _i2.GetMovieWatchlistStatus get getMovieWatchlistStatus =>
      (super.noSuchMethod(
        Invocation.getter(#getMovieWatchlistStatus),
        returnValue: _FakeGetMovieWatchlistStatus_2(
          this,
          Invocation.getter(#getMovieWatchlistStatus),
        ),
      ) as _i2.GetMovieWatchlistStatus);
  @override
  _i2.SaveMovieWatchlist get saveMovieWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveMovieWatchlist),
        returnValue: _FakeSaveMovieWatchlist_3(
          this,
          Invocation.getter(#saveMovieWatchlist),
        ),
      ) as _i2.SaveMovieWatchlist);
  @override
  _i2.RemoveMovieWatchlist get removeMovieWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeMovieWatchlist),
        returnValue: _FakeRemoveMovieWatchlist_4(
          this,
          Invocation.getter(#removeMovieWatchlist),
        ),
      ) as _i2.RemoveMovieWatchlist);
  @override
  _i2.MovieDetail get movie => (super.noSuchMethod(
        Invocation.getter(#movie),
        returnValue: _FakeMovieDetail_5(
          this,
          Invocation.getter(#movie),
        ),
      ) as _i2.MovieDetail);
  @override
  _i2.RequestState get movieState => (super.noSuchMethod(
        Invocation.getter(#movieState),
        returnValue: _i2.RequestState.Empty,
      ) as _i2.RequestState);
  @override
  List<_i2.Movie> get movieRecommendations => (super.noSuchMethod(
        Invocation.getter(#movieRecommendations),
        returnValue: <_i2.Movie>[],
      ) as List<_i2.Movie>);
  @override
  _i2.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i2.RequestState.Empty,
      ) as _i2.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isAddedToMovieWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToMovieWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i3.Future<void> fetchMovieDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchMovieDetail,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> addMovieWatchlist(_i2.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovieWatchlist,
          [movie],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> removeFromMovieWatchlist(_i2.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromMovieWatchlist,
          [movie],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> loadMovieWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadMovieWatchlistStatus,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
